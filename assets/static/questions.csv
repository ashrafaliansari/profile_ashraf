Question,Option1,Option2,Option3,Option4,CorrectOption
What is the purpose of the `global` keyword in Python?,To create global variables within functions,To modify variables in the global scope from within a function,To import modules globally,To define global classes,To modify variables in the global scope from within a function
What is the difference between `deepcopy()` and `copy()` in Python?,`deepcopy()` creates copies of nested objects while `copy()` only creates references,`deepcopy()` creates references to nested objects" while `copy()` creates copies of nested objects",`deepcopy()` and `copy()` are the same,`deepcopy()` creates copies of shallow objects" while `copy()` only creates references,`deepcopy()` creates copies of nested objects while `copy()` only creates references
Which of the following is true about Python's memory management?,Python uses automatic memory management with garbage collection,Memory management in Python must be done manually,Python uses manual memory management with a reference counting system,Python doesnâ€™t have garbage collection,Python uses automatic memory management with garbage collection
What is the purpose of the `with` statement in Python?,To handle exceptions,To manage context (e.g. file opening/closing) more effectively,To import modules,To define functions more easily,To manage context (e.g. file opening/closing) more effectively
What is the `__init__()` method in Python classes?,It is the constructor method used to initialize instance variables when a class is instantiated,It is the method used to initialize the class variables,It is used to define instance methods,It is the method used to destroy objects when they are no longer needed,It is the constructor method used to initialize instance variables when a class is instantiated
What does the `lambda` keyword do in Python?,It creates an anonymous function,It defines a regular function,It defines a method inside a class,It creates a generator function,It creates an anonymous function
What is the difference between `is` and `==` in Python?,`is` compares object identities (whether two objects are the same) while `==` compares values,`is` compares values while `==` compares object identities,`is` compares the values and types while `==` compares object identities, `is` and `==` are identical,`is` compares object identities (whether two objects are the same) while `==` compares values
Which of the following is true about Python's **GIL (Global Interpreter Lock)**?,The GIL prevents multiple threads from executing Python bytecodes simultaneously in multi-core systems,The GIL allows multiple threads to execute Python bytecodes simultaneously,The GIL is only used in Python 2.x,The GIL is not relevant in Python,The GIL prevents multiple threads from executing Python bytecodes simultaneously in multi-core systems
What is the purpose of the `__str__()` method in Python?,It returns a string representation of the object for human-readable output,It defines how the object should be printed,It is used for converting the object into JSON format,It is used for creating object serialization,It returns a string representation of the object for human-readable output